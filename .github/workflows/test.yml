name: jest unit test

on:
  pull_request:
    paths:
      - 'assets/games/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Setup the necessary tools
      - uses: actions/checkout@v4
        with:
          fetch-depth: 64

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.19.2

      - name: npm login
        run:
          npm config set //registry.npmjs.org/:_authToken=$NPM_READONLY_AUTH_TOKEN
        env:
          NPM_READONLY_AUTH_TOKEN: ${{ secrets.NPM_READONLY_AUTH_TOKEN }}

      - name: npm install dependencies
        run: npm install

      - name: Run Unit Test
        id: test
        run: |
          # Run tests and capture output
          TEST_OUTPUT=$(npm test 2>&1)
          echo "$TEST_OUTPUT"

          # Save complete test output for PR comment
          echo "test_output<<EOF" >> $GITHUB_OUTPUT
          echo "$TEST_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check Coverage Threshold
        run: |
          # Extract line coverage percentage from Jest output
          COVERAGE=$(echo "${{ steps.test.outputs.test_output }}" | grep "All files" | awk '{print $10}' | sed 's/%//')

          if [ -z "$COVERAGE" ]; then
            echo "‚ùå Could not extract coverage from test output"
            exit 1
          fi

          echo "Total line coverage: ${COVERAGE}%"

          # Check if coverage meets 80% threshold
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "‚ùå Coverage is below 80% threshold. Current: ${COVERAGE}%"
            exit 1
          else
            echo "‚úÖ Coverage meets 80% threshold. Current: ${COVERAGE}%"
          fi

      - name: Comment PR with Coverage Report
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const testOutput = `${{ steps.test.outputs.test_output }}`;

            const body = `## üß™ Test Coverage Report

            \`\`\`
            ${testOutput}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
